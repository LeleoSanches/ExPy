(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     64542,       1266]
NotebookOptionsPosition[     63393,       1229]
NotebookOutlinePosition[     63740,       1244]
CellTagsIndexPosition[     63697,       1241]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"\"\<Passo a passo de tudo at\[EAcute] agora\>\"", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Primeiramente Importar dados e nomear :\>\"", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Para Importar : Insert->FilePath->...\>\"", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Leoleo\\\\Desktop\\\\TCC\\\\Mathematica\\\\\
Interpolation\\\\116.dat\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.708183839573625*^9, 3.7081839960342855`*^9}}],

Cell[BoxData[{
 RowBox[{"\"\<Juntar Raio e Velocidades em Tabelas\>\"", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Verificar Dimen\[CCedilla]\[OTilde]es com -> Dimensions[data]\>\
\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
  "\"\<data[[i,1]] -> Dados i da coluna 1\>\"", 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RCtotal", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RCgas", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7081839982218733`*^9, 3.7081840561329546`*^9}, {
  3.7081840882751245`*^9, 3.7081842893057547`*^9}, {3.708184397641012*^9, 
  3.7081844103916483`*^9}, {3.7081846050279455`*^9, 3.7081846328574047`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Erro", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.708184290274551*^9, 3.7081843167445726`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"\"\<Chama o pacote de erros\>\"", ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "\"\<Prestar aten\[CCedilla]\[ATilde]o nos indices, Todos os pares de dados \
tem que ter um erro nem que for 0\>\"", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"RC", " ", "=", 
  RowBox[{"ErrorListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RCtotal", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"Erro", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "15"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RCgas", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ErrorBar", "[", "0", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "15"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<ESO 116-G12\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Raio(Kpc)\>\"", ",", "\"\<Velocidade(Km/s)\>\""}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7081843184321504`*^9, 3.70818437201478*^9}, {
  3.7081844162044*^9, 3.7081845994339533`*^9}, {3.7081846556084967`*^9, 
  3.708184816462489*^9}, {3.708184885653282*^9, 3.7081849579555073`*^9}, {
  3.7081850022100077`*^9, 3.708185008288415*^9}, {3.7081850796981*^9, 
  3.7081851484684024`*^9}, {3.7081851801105433`*^9, 3.7081851814543867`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.295522, 20.94}, {0.985821, 39.95}, {1.62537, 51.54}, {
      2.18881, 67.92}, {3.17687, 80.22}, {3.76791, 83.33}, {4.35896, 91.38}, {
      4.8903, 101.65}, {6.19403, 104.77}, {7.16418, 108.62}, {8.0597, 
      108.48}, {8.95522, 108.73}, {9.85075, 110.24}, {10.7463, 110.63}, {
      11.6418, 111.52}}], {{
       LineBox[{{0.295522, 24.34}, {0.295522, 17.540000000000003`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.295522, 24.34}], 
         Offset[{-1.5, 0}, {0.295522, 24.34}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.295522, 17.540000000000003`}], 
         Offset[{-1.5, 0}, {0.295522, 17.540000000000003`}]}]}, {
       LineBox[{{0.985821, 43.24}, {0.985821, 36.660000000000004`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.985821, 43.24}], 
         Offset[{-1.5, 0}, {0.985821, 43.24}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.985821, 36.660000000000004`}], 
         Offset[{-1.5, 0}, {0.985821, 36.660000000000004`}]}]}, {
       LineBox[{{1.62537, 54.5}, {1.62537, 48.58}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.62537, 54.5}], 
         Offset[{-1.5, 0}, {1.62537, 54.5}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.62537, 48.58}], 
         Offset[{-1.5, 0}, {1.62537, 48.58}]}]}, {
       LineBox[{{2.18881, 71.37}, {2.18881, 64.47}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.18881, 71.37}], 
         Offset[{-1.5, 0}, {2.18881, 71.37}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.18881, 64.47}], 
         Offset[{-1.5, 0}, {2.18881, 64.47}]}]}, {
       LineBox[{{3.17687, 83.15}, {3.17687, 77.28999999999999}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.17687, 83.15}], 
         Offset[{-1.5, 0}, {3.17687, 83.15}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.17687, 77.28999999999999}], 
         Offset[{-1.5, 0}, {3.17687, 77.28999999999999}]}]}, {
       LineBox[{{3.76791, 86.41}, {3.76791, 80.25}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.76791, 86.41}], 
         Offset[{-1.5, 0}, {3.76791, 86.41}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.76791, 80.25}], 
         Offset[{-1.5, 0}, {3.76791, 80.25}]}]}, {
       LineBox[{{4.35896, 94.21}, {4.35896, 88.55}}], 
       LineBox[{
        Offset[{1.5, 0}, {4.35896, 94.21}], 
         Offset[{-1.5, 0}, {4.35896, 94.21}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4.35896, 88.55}], 
         Offset[{-1.5, 0}, {4.35896, 88.55}]}]}, {
       LineBox[{{4.8903, 107.05000000000001`}, {4.8903, 96.25}}], 
       LineBox[{
        Offset[{1.5, 0}, {4.8903, 107.05000000000001`}], 
         Offset[{-1.5, 0}, {4.8903, 107.05000000000001`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4.8903, 96.25}], 
         Offset[{-1.5, 0}, {4.8903, 96.25}]}]}, {
       LineBox[{{6.19403, 108.97999999999999`}, {6.19403, 100.56}}], 
       LineBox[{
        Offset[{1.5, 0}, {6.19403, 108.97999999999999`}], 
         Offset[{-1.5, 0}, {6.19403, 108.97999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {6.19403, 100.56}], 
         Offset[{-1.5, 0}, {6.19403, 100.56}]}]}, {
       LineBox[{{7.16418, 110.72}, {7.16418, 106.52000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {7.16418, 110.72}], 
         Offset[{-1.5, 0}, {7.16418, 110.72}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7.16418, 106.52000000000001`}], 
         Offset[{-1.5, 0}, {7.16418, 106.52000000000001`}]}]}, {
       LineBox[{{8.0597, 110.58}, {8.0597, 106.38000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {8.0597, 110.58}], 
         Offset[{-1.5, 0}, {8.0597, 110.58}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8.0597, 106.38000000000001`}], 
         Offset[{-1.5, 0}, {8.0597, 106.38000000000001`}]}]}, {
       LineBox[{{8.95522, 110.83}, {8.95522, 106.63000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {8.95522, 110.83}], 
         Offset[{-1.5, 0}, {8.95522, 110.83}]}], 
       LineBox[{
        Offset[{1.5, 0}, {8.95522, 106.63000000000001`}], 
         Offset[{-1.5, 0}, {8.95522, 106.63000000000001`}]}]}, {
       LineBox[{{9.85075, 112.33999999999999`}, {9.85075, 108.14}}], 
       LineBox[{
        Offset[{1.5, 0}, {9.85075, 112.33999999999999`}], 
         Offset[{-1.5, 0}, {9.85075, 112.33999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9.85075, 108.14}], 
         Offset[{-1.5, 0}, {9.85075, 108.14}]}]}, {
       LineBox[{{10.7463, 112.96}, {10.7463, 108.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {10.7463, 112.96}], 
         Offset[{-1.5, 0}, {10.7463, 112.96}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10.7463, 108.3}], 
         Offset[{-1.5, 0}, {10.7463, 108.3}]}]}, {
       LineBox[{{11.6418, 116.25999999999999`}, {11.6418, 106.78}}], 
       LineBox[{
        Offset[{1.5, 0}, {11.6418, 116.25999999999999`}], 
         Offset[{-1.5, 0}, {11.6418, 116.25999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11.6418, 106.78}], 
         Offset[{-1.5, 0}, {11.6418, 106.78}]}]}}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.295522, -0.234178}, {0.985821, -1.95065}, {
      1.62537, -1.68024}, {2.18881, 5.43454}, {3.17687, 13.5993}, {3.76791, 
      18.0705}, {4.35896, 21.8567}, {4.8903, 24.2219}, {6.19403, 27.7912}, {
      7.16418, 29.5757}, {8.0597, 30.9882}, {8.95522, 33.3072}, {9.85075, 
      36.6602}, {10.7463, 38.4926}, {11.6418, 
      36.585}}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Velocidade(Km/s)\"", TraditionalForm], None}, {
     FormBox["\"Raio(Kpc)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{470., Automatic},
  Method->{},
  PlotLabel->FormBox["\"ESO 116-G12\"", TraditionalForm],
  PlotRange->{{0, 11.6418}, {-1.95065, 111.52}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.708184660530609*^9, 3.7081846774376707`*^9}, 
   3.708184733645982*^9, 3.7081847762417793`*^9, 3.7081848864033203`*^9, {
   3.7081849596118126`*^9, 3.7081849664871373`*^9}, 3.708185009444723*^9, {
   3.7081850851046047`*^9, 3.708185098372243*^9}, 3.708185149202809*^9, 
   3.7081851842669973`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "RCtotal", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7081851851576614`*^9, 3.7081852052055035`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "RCgas", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7081852072524724`*^9, 3.7081852254564714`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "15"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
  "\"\<Mostra o graf\[IAcute]co da Interpola\[CCedilla]\[ATilde]o\>\"", 
   ";"}]}]}], "Input",
 CellChangeTimes->{{3.708185268771052*^9, 3.7081853372136173`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.708185338979325*^9, 3.708185339510597*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.3", ",", "11.7"}], "}"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "=", "0"}], ",", 
        RowBox[{"x", "=", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7081853660838037`*^9, 3.708185498555298*^9}, {
  3.708185692472687*^9, 3.7081857128174157`*^9}, {3.708185788914846*^9, 
  3.7081858064469123`*^9}, {3.708185904973179*^9, 3.7081859182550697`*^9}, {
  3.7081861832708983`*^9, 3.7081861835365105`*^9}, {3.708186214850512*^9, 
  3.7081862149286413`*^9}, {3.7081863907013474`*^9, 3.7081864161557155`*^9}, {
  3.7081864532668514`*^9, 3.708186466423732*^9}, {3.7081866148230505`*^9, 
  3.7081866677787137`*^9}, {3.70818763524028*^9, 3.7081876473502345`*^9}, {
  3.7081877009778132`*^9, 3.70818780812724*^9}, {3.7081879040556545`*^9, 
  3.7081880306242094`*^9}, {3.708188190407728*^9, 3.7081882493167768`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7081855014616575`*^9, 3.7081855048368196`*^9}}],

Cell[BoxData[
 RowBox[{"\"\<Coloquei at\[EAcute] 12 pois at\[EAcute] 15 fica ruim, o valor \
minimo de x \[EAcute] 0.3 pois \[EAcute] referente ao primeiro ponto\>\"", 
  ";"}]], "Input",
 CellChangeTimes->{{3.708185445457464*^9, 3.708185468147587*^9}, {
  3.7081880481250477`*^9, 3.7081880754388866`*^9}, {3.708188119666387*^9, 
  3.708188134167053*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.708185333994707*^9, 3.7081853349635034`*^9}, 
   3.708185506493179*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Final", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"a", ",", "RC", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameMargins", "->", "Small"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Raio(Kpc)\>\"", ",", "\"\<Velocidade(Km/s)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<ESO 116-G12\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.708185298852392*^9, {3.708185522009519*^9, 3.7081856517832603`*^9}, {
   3.7081860337932224`*^9, 3.7081860419342365`*^9}, {3.708186075623354*^9, 
   3.708186079014138*^9}, {3.7081861265789266`*^9, 3.7081861685965652`*^9}, {
   3.7081862443988094`*^9, 3.7081863633406563`*^9}, {3.708186485487179*^9, 
   3.7081865996191907`*^9}, {3.708186700249028*^9, 3.708186722174117*^9}, {
   3.7081868870414076`*^9, 3.708186933055319*^9}, {3.70818742044003*^9, 
   3.708187438240809*^9}, {3.7081875485486417`*^9, 3.7081875653150425`*^9}, {
   3.7081875973009586`*^9, 3.7081876050513554`*^9}, 3.7081880408121953`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
dD59euS7RGno4O73LK6hwI223QKHc9IwWKlLp/YGff7ejVPivDS4jH1e8EO+
3dF48ecF9Pu+xYqPkZO6rhlHh0lD0/jNV5i36P36iXH+eZQ0yNrV0+8gl01w
KrLfkQa2MeEPY/Uovmtilc2l0lA5UDc900wB4kakcGKZNAR78j+UfYfOZ/Pr
NXK5NHBXlNX6IY9u5xGXKqVhp1Rb7i/yDK3sX9FaaeB0VBlmb6XAX04VrbD3
0iD3/VOfdTt678hCvcqcNHS7MGJlu9B7IPZtyoHv0pD00rnhKjLMafsdnJcG
MW6F5THkU/lqgqq/pOG1xHna1G50njj5cxp/pUG6K3WBrRf1M0GMjC6DDGi6
MTthPqH6y7Jw20xaBoxNVRMefEbvJ29vT3NZGehcy8Ewj6D+0z532EJOBgKE
CvUvInfHfP1uqSQDOuwdEfajaH20Q/q26jIg0al9X3AM/X9bjX+dDGXgXHtD
W8Mk6k9kQhfJWAbmfw/kaH5F8+urN3lkUxlQaEvFP0emDqm2Pm4pA9ofXGXz
p9D6VkuLXR1koJD4UzdphgIn7OSi3JxkIItD9zznLJp/Kp44niDLQBV3M+kW
8oOzuXQeLjLga1SmnDCHzqdHbNTDTQbEs9UlWL+h+6z08PlJdxnAJ2q0JCAP
3BKK8zwpAxty+oLs39E8tnDfxctLBg7EfBNNRP4f3vRpLQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.295522, 20.94}, {0.985821, 39.95}, {1.62537, 51.54}, {
       2.18881, 67.92}, {3.17687, 80.22}, {3.76791, 83.33}, {4.35896, 
       91.38}, {4.8903, 101.65}, {6.19403, 104.77}, {7.16418, 108.62}, {
       8.0597, 108.48}, {8.95522, 108.73}, {9.85075, 110.24}, {10.7463, 
       110.63}, {11.6418, 
       111.52}}], {{
        LineBox[{{0.295522, 24.34}, {0.295522, 17.540000000000003`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.295522, 24.34}], 
          Offset[{-1.5, 0}, {0.295522, 24.34}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.295522, 17.540000000000003`}], 
          Offset[{-1.5, 0}, {0.295522, 17.540000000000003`}]}]}, {
        LineBox[{{0.985821, 43.24}, {0.985821, 36.660000000000004`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.985821, 43.24}], 
          Offset[{-1.5, 0}, {0.985821, 43.24}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.985821, 36.660000000000004`}], 
          Offset[{-1.5, 0}, {0.985821, 36.660000000000004`}]}]}, {
        LineBox[{{1.62537, 54.5}, {1.62537, 48.58}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.62537, 54.5}], 
          Offset[{-1.5, 0}, {1.62537, 54.5}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.62537, 48.58}], 
          Offset[{-1.5, 0}, {1.62537, 48.58}]}]}, {
        LineBox[{{2.18881, 71.37}, {2.18881, 64.47}}], 
        LineBox[{
         Offset[{1.5, 0}, {2.18881, 71.37}], 
          Offset[{-1.5, 0}, {2.18881, 71.37}]}], 
        LineBox[{
         Offset[{1.5, 0}, {2.18881, 64.47}], 
          Offset[{-1.5, 0}, {2.18881, 64.47}]}]}, {
        LineBox[{{3.17687, 83.15}, {3.17687, 77.28999999999999}}], 
        LineBox[{
         Offset[{1.5, 0}, {3.17687, 83.15}], 
          Offset[{-1.5, 0}, {3.17687, 83.15}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3.17687, 77.28999999999999}], 
          Offset[{-1.5, 0}, {3.17687, 77.28999999999999}]}]}, {
        LineBox[{{3.76791, 86.41}, {3.76791, 80.25}}], 
        LineBox[{
         Offset[{1.5, 0}, {3.76791, 86.41}], 
          Offset[{-1.5, 0}, {3.76791, 86.41}]}], 
        LineBox[{
         Offset[{1.5, 0}, {3.76791, 80.25}], 
          Offset[{-1.5, 0}, {3.76791, 80.25}]}]}, {
        LineBox[{{4.35896, 94.21}, {4.35896, 88.55}}], 
        LineBox[{
         Offset[{1.5, 0}, {4.35896, 94.21}], 
          Offset[{-1.5, 0}, {4.35896, 94.21}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4.35896, 88.55}], 
          Offset[{-1.5, 0}, {4.35896, 88.55}]}]}, {
        LineBox[{{4.8903, 107.05000000000001`}, {4.8903, 96.25}}], 
        LineBox[{
         Offset[{1.5, 0}, {4.8903, 107.05000000000001`}], 
          Offset[{-1.5, 0}, {4.8903, 107.05000000000001`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {4.8903, 96.25}], 
          Offset[{-1.5, 0}, {4.8903, 96.25}]}]}, {
        LineBox[{{6.19403, 108.97999999999999`}, {6.19403, 100.56}}], 
        LineBox[{
         Offset[{1.5, 0}, {6.19403, 108.97999999999999`}], 
          Offset[{-1.5, 0}, {6.19403, 108.97999999999999`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {6.19403, 100.56}], 
          Offset[{-1.5, 0}, {6.19403, 100.56}]}]}, {
        LineBox[{{7.16418, 110.72}, {7.16418, 106.52000000000001`}}], 
        LineBox[{
         Offset[{1.5, 0}, {7.16418, 110.72}], 
          Offset[{-1.5, 0}, {7.16418, 110.72}]}], 
        LineBox[{
         Offset[{1.5, 0}, {7.16418, 106.52000000000001`}], 
          Offset[{-1.5, 0}, {7.16418, 106.52000000000001`}]}]}, {
        LineBox[{{8.0597, 110.58}, {8.0597, 106.38000000000001`}}], 
        LineBox[{
         Offset[{1.5, 0}, {8.0597, 110.58}], 
          Offset[{-1.5, 0}, {8.0597, 110.58}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8.0597, 106.38000000000001`}], 
          Offset[{-1.5, 0}, {8.0597, 106.38000000000001`}]}]}, {
        LineBox[{{8.95522, 110.83}, {8.95522, 106.63000000000001`}}], 
        LineBox[{
         Offset[{1.5, 0}, {8.95522, 110.83}], 
          Offset[{-1.5, 0}, {8.95522, 110.83}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8.95522, 106.63000000000001`}], 
          Offset[{-1.5, 0}, {8.95522, 106.63000000000001`}]}]}, {
        LineBox[{{9.85075, 112.33999999999999`}, {9.85075, 108.14}}], 
        LineBox[{
         Offset[{1.5, 0}, {9.85075, 112.33999999999999`}], 
          Offset[{-1.5, 0}, {9.85075, 112.33999999999999`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {9.85075, 108.14}], 
          Offset[{-1.5, 0}, {9.85075, 108.14}]}]}, {
        LineBox[{{10.7463, 112.96}, {10.7463, 108.3}}], 
        LineBox[{
         Offset[{1.5, 0}, {10.7463, 112.96}], 
          Offset[{-1.5, 0}, {10.7463, 112.96}]}], 
        LineBox[{
         Offset[{1.5, 0}, {10.7463, 108.3}], 
          Offset[{-1.5, 0}, {10.7463, 108.3}]}]}, {
        LineBox[{{11.6418, 116.25999999999999`}, {11.6418, 106.78}}], 
        LineBox[{
         Offset[{1.5, 0}, {11.6418, 116.25999999999999`}], 
          Offset[{-1.5, 0}, {11.6418, 116.25999999999999`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {11.6418, 106.78}], 
          Offset[{-1.5, 0}, {11.6418, 106.78}]}]}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.295522, -0.234178}, {0.985821, -1.95065}, {
       1.62537, -1.68024}, {2.18881, 5.43454}, {3.17687, 13.5993}, {3.76791, 
       18.0705}, {4.35896, 21.8567}, {4.8903, 24.2219}, {6.19403, 27.7912}, {
       7.16418, 29.5757}, {8.0597, 30.9882}, {8.95522, 33.3072}, {9.85075, 
       36.6602}, {10.7463, 38.4926}, {11.6418, 
       36.585}}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}}, {}}},
  FrameMargins -> Small,
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Raio(Kpc)\"", TraditionalForm], 
    FormBox["\"Velocidade(Km/s)\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{628.8888888888887, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"ESO 116-G12\"", TraditionalForm],
  PlotRange->{{0., 11.7}, {-2.4732610187460398`, 111.63373539552482`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7081861948339252`*^9, 3.7081862684624615`*^9}, {
   3.7081863364002748`*^9, 3.7081863639969387`*^9}, {3.708186394310899*^9, 
   3.7081864189839554`*^9}, {3.7081864686582155`*^9, 
   3.7081864905030155`*^9}, {3.708186577477503*^9, 3.708186639527358*^9}, {
   3.708186706764963*^9, 3.708186734252819*^9}, 3.7081868993098497`*^9, 
   3.7081869336178403`*^9, 3.708187426799712*^9, {3.708187621364617*^9, 
   3.708187650850404*^9}, 3.7081877635156937`*^9, 3.70818791474364*^9, 
   3.7081879487765236`*^9, {3.708187998903936*^9, 3.708188034405644*^9}, {
   3.7081881102909083`*^9, 3.7081881373547087`*^9}, {3.708188192673436*^9, 
   3.7081882517075205`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bIz/LA==\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7081861860991316`*^9, 3.7081862028343105`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7081862037249765`*^9, 3.7081862037406054`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7081855681992397`*^9, 3.7081855682304945`*^9}, {
  3.7081857647730393`*^9, 3.708185773554708*^9}, {3.7081858305755205`*^9, 
  3.708185840169733*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.7081852266127806`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.708185152843609*^9, 3.7081851695319138`*^9}}]
},
WindowSize->{1366, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 630, 15, 150, "Input"],
Cell[1191, 37, 1490, 41, 166, "Input"],
Cell[2684, 80, 406, 12, 70, "Input"],
Cell[CellGroupData[{
Cell[3115, 96, 1874, 46, 206, "Input"],
Cell[4992, 144, 6765, 151, 331, "Output"]
}, Open  ]],
Cell[11772, 298, 194, 4, 48, "Input"],
Cell[11969, 304, 192, 4, 48, "Input"],
Cell[12164, 310, 399, 12, 70, "Input"],
Cell[12566, 324, 92, 1, 31, "Input"],
Cell[12661, 327, 1154, 24, 48, "Input"],
Cell[13818, 353, 96, 1, 31, "Input"],
Cell[13917, 356, 355, 6, 31, "Input"],
Cell[14275, 364, 139, 2, 52, InheritFromParent],
Cell[CellGroupData[{
Cell[14439, 370, 1110, 21, 70, "Input"],
Cell[15552, 393, 47218, 816, 430, 33058, 584, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[62785, 1212, 96, 1, 31, InheritFromParent],
Cell[62884, 1215, 96, 1, 31, InheritFromParent],
Cell[62983, 1218, 198, 3, 31, InheritFromParent],
Cell[63184, 1223, 89, 1, 52, "Input"],
Cell[63276, 1226, 113, 1, 52, "Input"]
}
]
*)

(* End of internal cache information *)

